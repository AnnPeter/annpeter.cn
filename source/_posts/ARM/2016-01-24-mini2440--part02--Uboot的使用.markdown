---
layout: post
title: "mini2440--part02--Uboot的使用"
date: 2016-01-24 21:06:35 +1150
comments: true
categories: ARM mini2440
keywords: ARM,mini2440,Uboot,博客,AnnPeter's Blog
description: "mini2440--part02--Uboot的使用"
zTree: true

---


###Uboot命令使用
1. printenv:查看环境变量，可查看到ipaddr，ethaddr，serverip等信息
2. setenv:添加、修改、删除环境变量
	setenv name value ...添加或修改环境变量
    setenv name 删除环境变量
3. save(或saveenv)保存所有环境变量到flash中

<!-- more -->

4. tftp 通过网络下载文件
	* 在宿主机上搭建tftp服务器

	```vim
	$ sudo apt-get install tftpd-hpa
	$ sudo apt-get install tftp-hpa(tftp-hpa是客户端，如果不许要可以不安装)

	//配置tftp服务器
	$ sudo vim /etc/default/tftpd-hpa
	将原来的内容修改为
	TFTP_USERNAME="tftp"
	TFTP_ADDRESS="0.0.0.0:69"
	TFTP_DIRECTORY="tftp根目录" //服务器目录,需要设置权限为777
	TFTP_OPTIONS="-l -c -s"

	//重启tftp服务器
	$ sudo service tftpd-hpa restart
	```

    * 在开发板上配置网络

     ```vim
     $ setenv ethaddr 12:34:56:78:9A:BC
     $ setenv ipaddr 192.168.1.123 //ip地址根据自己的网络环境设置
     $ setenv serverip 192.168.1.2 //tftp服务器地址，根据自己网络环境设置
     $ ping 192.168.1.2
     ```

    * 将要下载的文件放在宿主机tftp根目录，开始下载

     ```vim
     $ tftp 0x31000000 uImage
     ```

5. bootm {addr} {arg}

	```vim
    $ bootm 0x31000000
    ```
6. md显示内存区的内容
	md采用十六进制和ASCII码两种形式来显示存储单元中的内容。
    这条命令还可以采用长度标识符md.l,md.w,md.b
    md[.l, .w, .b] address

7. mm修改内存，地址自动递增
	mm [.b, .w, .l] address(如果发生了修改，想要结束，请输入空格然后回车)


8. nand erase address(起始地址) len(长度)
	擦除address开始的，长度为len的区域

9. nand write mem_addr(内存起始地址) flash_addr(flash起始地址) len(长度)
	将内存起始地址处，长度为len的数据写入flash起始地址处。

10. nand read mem_addr(内存起始地址) flash_addr(flash起始地址) len（长度
	将flash起始地址处，长度为len的数据，读取到内存起始地址处。

11. 设置从nand flash 自动启动
	setenv bootcmd nand read 0x31000000 0x400000 0x500000 \; bootm 0x31000000

12. 设置自动下载内核到内存后启动
	setenv bootcmd tftp 0x31000000 uImage \; bootm 0x31000000



