---
layout: post
title: "mini2440--part03--Linux文件系统制作"
date: 2016-01-24 23:22:24 +1102
comments: true
categories: ARM mini2440
keywords: ARM,Linux文件系统制作,Uboot,博客,AnnPeter's Blog
description: "mini2440--part03--Linux文件系统制作"
zTree: true

---

本文主要介绍嵌入式Linux文件系统的制作，主要包括initramfs和NFS。

<!-- more -->

1. 创建目录

	```vim
	$ mkdir rootfs
	$ cd rootfs
	$ mkdir bin dev etc lib proc sbin sys usr mnt tmp var
	$ mkdir usr/bin usr/lib usr/sbin lib/modules lib/firmware
	```


2. 创建设备文件

	```vim
	$ cd rootfs/dev
	$ mknod -m 666 console c 5 1
	$ mknod -m 666 null c 1 3
	```

3. 加入配置文件

	```vim
	$ tar etc.tar.gz
	$ mv -rf etc/* root/etc
	```

4. 添加内核模块

	```vim
	$ cd linux-mini2440
	$ make modules ARCH=arm CROSS_COMPILE=arm-linux-
	$ make modules_install ARCH=arm INSTALL_MOD_PATH=~/Desktop/rootfs
	```

5. 编译/安装BusyBox

 	BusyBox 是一个集成了一百多个最常用linux命令和工具的软件。

	 配置BusyBox

	```vim
	$ make menuconfig

	//BusyBox Setting -> Build Options
	//选中"Build BusyBox as a static binary(no shared libs)"
	//Cross Compiler prefix(arm-linux-)

	//BusyBox Setting -> Installation Options
	//选中"Don't use /usr", 选中该项可以避免BusyBox被安装到宿主机的/usr目录下，破坏宿主机系统。

	//BusyBox I nstallation Prefix(/XXX/rootfs)
	该选项表面编译后的BusyBox的安装位置

	//编译、安装
	$ make
	$ make install
	```

6. 挂载根文件系统
  根据存储设备的硬件特性、系统需求，在不同的文件系统类型有不同应用场合。主要的存储设备分为RAM和FLASH，常用的 文件系统类型有
  * 基于nand flash的文件系统：yaffs2、UbiFS
  * 基于nor flash的文件系统：jffs2
  * 基于内存的文件系统：ramdisk initramfs
  * 基于网络的文件系统：NFS

	```vim
	$ cd rootfs
	$ ln -s ./bin/busybox init

	//方案一
	//配置Linux内核，支持initramfs
	$ make menuconfig ARCH=arm
	//General setup
	//Initial RAM filesystem and RAM disk (initramfs/initrd) support
	//设置rootfs在宿主机上的位置

	//编译内核
	$ make uImage ARCH=arm CROSS_COMPILE=arm-linux-

	//使用uBoot下载内核后，设置环境变量
	$ setenv bootargs noinitrd console=ttySAC0,115200

	方案二
	//配置Linux内核，支持NFS
	$ make menuconfig ARCH=arm
	//General setup
	//取消Initial RAM filesystem and RAM disk (initramfs/initrd) support
	//在File systems->Nerwork File Systems选中Root file System on NFS

	//在宿主机上启动nfs服务器
	$ sudo apt-get install nfs-kernel-server
	$ mkdir /home/annpeter/Desktop/rootfs	//建立nfs服务器根目录
	$ sudo vim /etc/exports 	//修改nfs服务器配置文件
		在最后一行加入 /home/annpeter/Desktop/rootfs *(rw,sync,no_root_squash)
	$ sudo service nfs-kernel-server restart

	//在uboot中设置bootargs
	$ setenv bootargs noinitrd
	console=ttySAC0,115200 init=/init
	root=/dev/nfs rw
	nfsroot=192.168.1.2:/home/annpeter/Desktop/rootfs
	ip=192.168.1.123:192.168.1.2:192.168.1.1:25
	5.255.255.0::eth0:off
	```
